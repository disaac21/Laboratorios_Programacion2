/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package danieljuarez_lab10p2;

import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;

/**
 *
 * @author danie
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() throws IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        CargarArbol();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelPlayingNow = new javax.swing.JLabel();
        ProgressBar = new javax.swing.JProgressBar();
        TreeScrollPane = new javax.swing.JScrollPane();
        SongsTree = new javax.swing.JTree();
        Grabar = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        Reproducir = new javax.swing.JButton();
        Pausar = new javax.swing.JButton();
        TextScrollPane = new javax.swing.JScrollPane();
        SongText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelPlayingNow.setText("jLabel1");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Canciones");
        SongsTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        SongsTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SongsTreeMouseClicked(evt);
            }
        });
        TreeScrollPane.setViewportView(SongsTree);

        Grabar.setText("Grabar Canci贸n");
        Grabar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrabarMouseClicked(evt);
            }
        });
        Grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrabarActionPerformed(evt);
            }
        });

        Guardar.setText("Guardar Canci贸n");
        Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuardarMouseClicked(evt);
            }
        });

        Reproducir.setText("Reproducir Canci贸n");
        Reproducir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReproducirMouseClicked(evt);
            }
        });

        Pausar.setText("Pausar Canci贸n");

        SongText.setColumns(20);
        SongText.setRows(5);
        SongText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SongTextKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SongTextKeyTyped(evt);
            }
        });
        TextScrollPane.setViewportView(SongText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabelPlayingNow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 645, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TreeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Grabar)
                                .addGap(18, 18, 18)
                                .addComponent(Guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                .addComponent(Reproducir)
                                .addGap(18, 18, 18)
                                .addComponent(Pausar))
                            .addComponent(TextScrollPane))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelPlayingNow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TreeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TextScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Grabar)
                            .addComponent(Guardar)
                            .addComponent(Reproducir)
                            .addComponent(Pausar))
                        .addGap(0, 103, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrabarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GrabarActionPerformed

    private void GrabarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrabarMouseClicked
        JOptionPane.showMessageDialog(this, "Recording Starting");

    }//GEN-LAST:event_GrabarMouseClicked

    private void GuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarMouseClicked

        String Nombre = JOptionPane.showInputDialog(this, "Ingrese el Nombre de la Cancion");
        String Categoria = JOptionPane.showInputDialog(this, "Ingrese la Categoria");
        String Letra = SongText.getText();

        Cancion newsong = new Cancion(Nombre, Categoria, Letra);

        AdminCancion ac = new AdminCancion("./Canciones.sng");
        ac.cargarArchivo();
        ac.setCancion(newsong);
        ac.escribirArchivo();
        JOptionPane.showMessageDialog(this,
                "Alumno guardado exitosamente");
        SongText.setText("");

        DefaultTreeModel modelo = (DefaultTreeModel) SongsTree.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        DefaultMutableTreeNode nodocategoria = new DefaultMutableTreeNode(Categoria);
        DefaultMutableTreeNode nodocancion = new DefaultMutableTreeNode(newsong);

        raiz.add(nodocategoria);
        nodocategoria.add(nodocancion);
        modelo.reload();

    }//GEN-LAST:event_GuardarMouseClicked

    private void SongsTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SongsTreeMouseClicked

    }//GEN-LAST:event_SongsTreeMouseClicked

    private void ReproducirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReproducirMouseClicked
        System.out.println(SongsTree.getLastSelectedPathComponent());
        String selected = SongsTree.getLastSelectedPathComponent().toString();
        AdminCancion ac = new AdminCancion("./Canciones.sng");
        ac.cargarArchivo();
        Cancion current = new Cancion();
        for (int i = 0; i < ac.getListaCanciones().size(); i++) {
            if (ac.getListaCanciones().get(i).getNombre().equals(selected)) {
                LabelPlayingNow.setText(ac.getListaCanciones().get(i).getNombre());
                current = ac.getListaCanciones().get(i);
            }
        }

        HiloPlaying hp = new HiloPlaying(ProgressBar, current.getLetra(), SongText);
        Thread proceso1 = new Thread(hp);
        proceso1.start();

    }//GEN-LAST:event_ReproducirMouseClicked

    private void SongTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SongTextKeyPressed
       
    }//GEN-LAST:event_SongTextKeyPressed

    private void SongTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SongTextKeyTyped
        HiloTyping hp = new HiloTyping(ProgressBar, SongText, evt);
        Thread proceso1 = new Thread(hp);
        proceso1.start();
    }//GEN-LAST:event_SongTextKeyTyped

    public void CargarArbol() throws FileNotFoundException, IOException, ClassNotFoundException {
        AdminCancion ac = new AdminCancion("./Canciones.sng");
        ac.cargarArchivo();
        Cancion temp;
        FileInputStream entrada
                = new FileInputStream("./Canciones.sng");
        ObjectInputStream objeto
                = new ObjectInputStream(entrada);
        DefaultTreeModel modelo = (DefaultTreeModel) SongsTree.getModel();
        DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modelo.getRoot();
        try {
            while ((temp = (Cancion) objeto.readObject()) != null) {
                DefaultMutableTreeNode nodocategoria = new DefaultMutableTreeNode(temp.getCategoria());
                DefaultMutableTreeNode nodocancion = new DefaultMutableTreeNode(temp.getNombre());
                raiz.add(nodocategoria);
                nodocategoria.add(nodocancion);
            }
        } catch (EOFException e) {
            //encontro el final del archivo
        }
        modelo.reload();
        objeto.close();
        entrada.close();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Grabar;
    private javax.swing.JButton Guardar;
    private javax.swing.JLabel LabelPlayingNow;
    private javax.swing.JButton Pausar;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JButton Reproducir;
    private javax.swing.JTextArea SongText;
    private javax.swing.JTree SongsTree;
    private javax.swing.JScrollPane TextScrollPane;
    private javax.swing.JScrollPane TreeScrollPane;
    // End of variables declaration//GEN-END:variables
}
