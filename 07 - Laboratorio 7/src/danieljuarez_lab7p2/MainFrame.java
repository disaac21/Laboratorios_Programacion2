/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package danieljuarez_lab7p2;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author danie
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    static Usuario Current = null;
    static Album CurrentAlbum = null;
    static int cont = 0;
    DefaultTreeModel m = null;
    DefaultMutableTreeNode nodo_album = null;
    DefaultMutableTreeNode Lanzamientos = null;
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SpotifyType = new javax.swing.ButtonGroup();
        ArtistWindow = new javax.swing.JDialog();
        SpotifyForArtists = new javax.swing.JLabel();
        UploadSingleButton = new javax.swing.JButton();
        UploadAlbumButton = new javax.swing.JButton();
        LanzamientosScroll = new javax.swing.JScrollPane();
        LanzamientosTree = new javax.swing.JTree();
        ListarTree = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        UploadSingleFrame = new javax.swing.JDialog();
        UploadSingle = new javax.swing.JLabel();
        SingleTitle = new javax.swing.JLabel();
        tf_SingleTitulo = new javax.swing.JTextField();
        SingleFecha = new javax.swing.JLabel();
        SingleFechaChooser = new com.toedter.calendar.JDateChooser();
        CrearSingleButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        UploadAlbumFrame = new javax.swing.JDialog();
        UploadAlbum = new javax.swing.JLabel();
        AlbumTitle = new javax.swing.JLabel();
        tf_AlbumTitulo = new javax.swing.JTextField();
        AlbumFecha = new javax.swing.JLabel();
        AlbumFechaChooser = new com.toedter.calendar.JDateChooser();
        CuentaCanciones = new javax.swing.JLabel();
        tf_CuentaCanciones = new javax.swing.JTextField();
        CrearAlbumButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        CreateSongFrame = new javax.swing.JDialog();
        CreateSong = new javax.swing.JLabel();
        SongTitulo = new javax.swing.JLabel();
        tf_SongTitulo = new javax.swing.JTextField();
        SongDuracion = new javax.swing.JLabel();
        tf_SongDuracion = new javax.swing.JTextField();
        CrearSongButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        CreateSongFrame1 = new javax.swing.JDialog();
        CreateSong1 = new javax.swing.JLabel();
        SongTitulo1 = new javax.swing.JLabel();
        tf_SongTitulo1 = new javax.swing.JTextField();
        SongDuracion1 = new javax.swing.JLabel();
        tf_SongDuracion1 = new javax.swing.JTextField();
        CrearSongButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        UserWindow = new javax.swing.JDialog();
        SpotifyForClients = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PlayListTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        BrowseTree = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        LikesList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NuevaPlaylistButton = new javax.swing.JButton();
        MeGustaButton = new javax.swing.JButton();
        BrowsePopUp = new javax.swing.JPopupMenu();
        AddToPlaylist = new javax.swing.JMenuItem();
        Like = new javax.swing.JMenuItem();
        CRUD = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        CRUDList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        SignUpTitle = new javax.swing.JLabel();
        Spotify = new javax.swing.JRadioButton();
        SpotifyArtists = new javax.swing.JRadioButton();
        Username = new javax.swing.JLabel();
        tf_Username = new javax.swing.JTextField();
        NombreArtistico = new javax.swing.JLabel();
        tf_NombreArtistico = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        tf_Password = new javax.swing.JTextField();
        Edad = new javax.swing.JLabel();
        tf_Edad = new javax.swing.JTextField();
        LogIn = new javax.swing.JButton();
        SignUp = new javax.swing.JButton();
        CRUDButton = new javax.swing.JButton();

        SpotifyForArtists.setText("Spotify For Artists");

        UploadSingleButton.setText("Upload Single");
        UploadSingleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UploadSingleButtonMouseClicked(evt);
            }
        });
        UploadSingleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadSingleButtonActionPerformed(evt);
            }
        });

        UploadAlbumButton.setText("Upload Album");
        UploadAlbumButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UploadAlbumButtonMouseClicked(evt);
            }
        });
        UploadAlbumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadAlbumButtonActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Lanzamientos");
        LanzamientosTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        LanzamientosTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LanzamientosTreeMouseClicked(evt);
            }
        });
        LanzamientosScroll.setViewportView(LanzamientosTree);

        ListarTree.setText("Listar");
        ListarTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListarTreeMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ArtistWindowLayout = new javax.swing.GroupLayout(ArtistWindow.getContentPane());
        ArtistWindow.getContentPane().setLayout(ArtistWindowLayout);
        ArtistWindowLayout.setHorizontalGroup(
            ArtistWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArtistWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ArtistWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SpotifyForArtists)
                    .addGroup(ArtistWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(ArtistWindowLayout.createSequentialGroup()
                            .addComponent(UploadSingleButton)
                            .addGap(18, 18, 18)
                            .addComponent(UploadAlbumButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ListarTree))
                        .addComponent(LanzamientosScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ArtistWindowLayout.setVerticalGroup(
            ArtistWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArtistWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SpotifyForArtists)
                .addGap(18, 18, 18)
                .addGroup(ArtistWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UploadSingleButton)
                    .addComponent(UploadAlbumButton)
                    .addComponent(ListarTree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LanzamientosScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        UploadSingle.setText("Upload Single");

        SingleTitle.setText("Título");

        SingleFecha.setText("Fecha");

        CrearSingleButton.setText("Crear");
        CrearSingleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CrearSingleButtonMouseClicked(evt);
            }
        });
        CrearSingleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearSingleButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout UploadSingleFrameLayout = new javax.swing.GroupLayout(UploadSingleFrame.getContentPane());
        UploadSingleFrame.getContentPane().setLayout(UploadSingleFrameLayout);
        UploadSingleFrameLayout.setHorizontalGroup(
            UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadSingleFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CrearSingleButton, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UploadSingleFrameLayout.createSequentialGroup()
                        .addGroup(UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UploadSingle)
                            .addComponent(SingleTitle)
                            .addComponent(SingleFecha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_SingleTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SingleFechaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        UploadSingleFrameLayout.setVerticalGroup(
            UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadSingleFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UploadSingle)
                .addGap(64, 64, 64)
                .addGroup(UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UploadSingleFrameLayout.createSequentialGroup()
                        .addGroup(UploadSingleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SingleTitle)
                            .addComponent(tf_SingleTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(SingleFecha))
                    .addComponent(SingleFechaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(CrearSingleButton)
                .addContainerGap(214, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        UploadAlbum.setText("Upload Album");

        AlbumTitle.setText("Título");

        AlbumFecha.setText("Fecha");

        CuentaCanciones.setText("Canciones");

        CrearAlbumButton.setText("Crear");
        CrearAlbumButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CrearAlbumButtonMouseClicked(evt);
            }
        });
        CrearAlbumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearAlbumButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout UploadAlbumFrameLayout = new javax.swing.GroupLayout(UploadAlbumFrame.getContentPane());
        UploadAlbumFrame.getContentPane().setLayout(UploadAlbumFrameLayout);
        UploadAlbumFrameLayout.setHorizontalGroup(
            UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UploadAlbumFrameLayout.createSequentialGroup()
                .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CrearAlbumButton)
                        .addGap(78, 78, 78))
                    .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UploadAlbum)
                            .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                                .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                                        .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CuentaCanciones)
                                            .addComponent(AlbumFecha))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UploadAlbumFrameLayout.createSequentialGroup()
                                        .addComponent(AlbumTitle)
                                        .addGap(13, 13, 13)))
                                .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tf_CuentaCanciones)
                                    .addComponent(tf_AlbumTitulo)
                                    .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                                        .addComponent(AlbumFechaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(180, 180, 180)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        UploadAlbumFrameLayout.setVerticalGroup(
            UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UploadAlbum)
                .addGap(64, 64, 64)
                .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UploadAlbumFrameLayout.createSequentialGroup()
                        .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AlbumTitle)
                            .addComponent(tf_AlbumTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(AlbumFecha))
                    .addComponent(AlbumFechaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UploadAlbumFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CuentaCanciones)
                    .addComponent(tf_CuentaCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(CrearAlbumButton)
                .addContainerGap(147, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        CreateSong.setText("Create Song");

        SongTitulo.setText("Título");

        tf_SongTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_SongTituloActionPerformed(evt);
            }
        });

        SongDuracion.setText("Duración");

        CrearSongButton.setText("Crear");
        CrearSongButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CrearSongButtonMouseClicked(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout CreateSongFrameLayout = new javax.swing.GroupLayout(CreateSongFrame.getContentPane());
        CreateSongFrame.getContentPane().setLayout(CreateSongFrameLayout);
        CreateSongFrameLayout.setHorizontalGroup(
            CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateSongFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CreateSong)
                    .addGroup(CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CrearSongButton)
                        .addGroup(CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CreateSongFrameLayout.createSequentialGroup()
                                .addComponent(SongTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_SongTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CreateSongFrameLayout.createSequentialGroup()
                                .addComponent(SongDuracion)
                                .addGap(18, 18, 18)
                                .addComponent(tf_SongDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        CreateSongFrameLayout.setVerticalGroup(
            CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateSongFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateSong)
                .addGap(43, 43, 43)
                .addGroup(CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SongTitulo)
                    .addComponent(tf_SongTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateSongFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SongDuracion)
                    .addComponent(tf_SongDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CrearSongButton)
                .addContainerGap(233, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        CreateSong1.setText("Create Song");

        SongTitulo1.setText("Título");

        tf_SongTitulo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_SongTitulo1ActionPerformed(evt);
            }
        });

        SongDuracion1.setText("Duración");

        CrearSongButton1.setText("Crear");
        CrearSongButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CrearSongButton1MouseClicked(evt);
            }
        });
        CrearSongButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearSongButton1ActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout CreateSongFrame1Layout = new javax.swing.GroupLayout(CreateSongFrame1.getContentPane());
        CreateSongFrame1.getContentPane().setLayout(CreateSongFrame1Layout);
        CreateSongFrame1Layout.setHorizontalGroup(
            CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateSongFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CreateSong1)
                    .addGroup(CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(CrearSongButton1)
                        .addGroup(CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CreateSongFrame1Layout.createSequentialGroup()
                                .addComponent(SongTitulo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_SongTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CreateSongFrame1Layout.createSequentialGroup()
                                .addComponent(SongDuracion1)
                                .addGap(18, 18, 18)
                                .addComponent(tf_SongDuracion1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        CreateSongFrame1Layout.setVerticalGroup(
            CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateSongFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CreateSong1)
                .addGap(43, 43, 43)
                .addGroup(CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SongTitulo1)
                    .addComponent(tf_SongTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateSongFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SongDuracion1)
                    .addComponent(tf_SongDuracion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CrearSongButton1)
                .addContainerGap(233, Short.MAX_VALUE))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        SpotifyForClients.setText("Spotify");

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Mis Playlists");
        PlayListTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(PlayListTree);

        treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Biblioteca Global");
        BrowseTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        BrowseTree.setComponentPopupMenu(BrowsePopUp);
        jScrollPane2.setViewportView(BrowseTree);

        jScrollPane3.setViewportView(LikesList);

        jLabel1.setText("Listas de Reproducción");

        jLabel2.setText("Me Gusta");

        jLabel3.setText("Browse");

        NuevaPlaylistButton.setText("Nueva Playlist");
        NuevaPlaylistButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NuevaPlaylistButtonMouseClicked(evt);
            }
        });

        MeGustaButton.setText("Me Gusta");
        MeGustaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MeGustaButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout UserWindowLayout = new javax.swing.GroupLayout(UserWindow.getContentPane());
        UserWindow.getContentPane().setLayout(UserWindowLayout);
        UserWindowLayout.setHorizontalGroup(
            UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserWindowLayout.createSequentialGroup()
                        .addComponent(SpotifyForClients)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(UserWindowLayout.createSequentialGroup()
                        .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(UserWindowLayout.createSequentialGroup()
                                .addComponent(NuevaPlaylistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MeGustaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(UserWindowLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(163, 163, 163)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(107, 107, 107))
        );
        UserWindowLayout.setVerticalGroup(
            UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SpotifyForClients)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3)
                        .addComponent(jScrollPane2))
                    .addGroup(UserWindowLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(UserWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MeGustaButton)
                            .addComponent(NuevaPlaylistButton))))
                .addGap(25, 25, 25))
        );

        AddToPlaylist.setText("Add a Playlist");
        AddToPlaylist.setActionCommand("Add To Playlist");
        AddToPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToPlaylistActionPerformed(evt);
            }
        });
        BrowsePopUp.add(AddToPlaylist);

        Like.setText("Like");
        Like.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LikeActionPerformed(evt);
            }
        });
        BrowsePopUp.add(Like);

        jPanel7.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 222, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(CRUDList);

        javax.swing.GroupLayout CRUDLayout = new javax.swing.GroupLayout(CRUD.getContentPane());
        CRUD.getContentPane().setLayout(CRUDLayout);
        CRUDLayout.setHorizontalGroup(
            CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CRUDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        CRUDLayout.setVerticalGroup(
            CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(CRUDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 469, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        SignUpTitle.setText("Spotify Sign Up");

        SpotifyType.add(Spotify);
        Spotify.setText("Spotify");

        SpotifyType.add(SpotifyArtists);
        SpotifyArtists.setText("Spotify for Artists");
        SpotifyArtists.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpotifyArtistsActionPerformed(evt);
            }
        });

        Username.setText("Username");

        tf_Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_UsernameActionPerformed(evt);
            }
        });

        NombreArtistico.setText("Nombre Artístico");

        tf_NombreArtistico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_NombreArtisticoActionPerformed(evt);
            }
        });

        Password.setText("Password");

        Edad.setText("Edad");

        tf_Edad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_EdadActionPerformed(evt);
            }
        });

        LogIn.setText("Log In");
        LogIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogInMouseClicked(evt);
            }
        });

        SignUp.setText("Sign Up");
        SignUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SignUpMouseClicked(evt);
            }
        });

        CRUDButton.setText("CRUD");
        CRUDButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CRUDButtonMouseClicked(evt);
            }
        });
        CRUDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CRUDButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LogIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SignUp)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SignUpTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Spotify)
                                    .addComponent(Username))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SpotifyArtists)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tf_Edad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                                        .addComponent(tf_Password, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(tf_Username, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(tf_NombreArtistico, javax.swing.GroupLayout.Alignment.TRAILING))))
                            .addComponent(Password)
                            .addComponent(Edad)
                            .addComponent(NombreArtistico)
                            .addComponent(CRUDButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SignUpTitle)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Spotify)
                    .addComponent(SpotifyArtists))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username)
                    .addComponent(tf_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NombreArtistico)
                    .addComponent(tf_NombreArtistico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password)
                    .addComponent(tf_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edad)
                    .addComponent(tf_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LogIn)
                    .addComponent(SignUp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(CRUDButton)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SpotifyArtistsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpotifyArtistsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SpotifyArtistsActionPerformed

    private void tf_UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_UsernameActionPerformed

    private void tf_EdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_EdadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_EdadActionPerformed

    private void SignUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpMouseClicked
        boolean existe = false;
        for (int i = 0; i < AllUsers.size(); i++) {
            if (tf_Username.getText().equals(AllUsers.get(i).getUsername())) {
                existe = true;
            }
        }
        if (existe) {
            JOptionPane.showMessageDialog(this, "El Usuario Ya Existe, Haga Log In.");
            tf_Username.setText("");
            tf_NombreArtistico.setText("");
            tf_Password.setText("");
            tf_Edad.setText("");
            Spotify.setSelected(false);
            SpotifyArtists.setSelected(false);
        } else {
            Date Fecha;
            Fecha = new Date();
            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                File f = null;
                f = new File("./SpotifyUsers.txt");
                fw = new FileWriter(f, true); //si NO EXISTE -> Crea || sí YA EXISTE -> Agrega
                bw = new BufferedWriter(fw);
                if (Spotify.isSelected()) {
//                bw.write(tf_Username.getText() + ";" + Spotify.getName() + ";" + Fecha);
                    bw.write(tf_Username.getText() + ";" + "Regular" + ";" + Fecha);
                    Usuario user = new Cliente(tf_Username.getText(), tf_Password.getText(), Integer.parseInt(tf_Edad.getText()));
                    AllUsers.add(user);
                    JOptionPane.showMessageDialog(this, "Usuario Creado con Éxito.");
                }
                if (SpotifyArtists.isSelected()) {
                    bw.write(tf_Username.getText() + ";" + "Artista" + ";" + Fecha);
                    Usuario user = new Artista(tf_NombreArtistico.getText(), tf_Username.getText(), tf_Password.getText(), Integer.parseInt(tf_Edad.getText()));
                    AllUsers.add(user);
                    JOptionPane.showMessageDialog(this, "Artista Creado con Éxito.");
                }
                bw.newLine();
                bw.flush();
                bw.close();
                fw.close();
            } catch (Exception e) {
            }
            tf_Username.setText("");
            tf_NombreArtistico.setText("");
            tf_Password.setText("");
            tf_Edad.setText("");
            Spotify.setSelected(false);
            SpotifyArtists.setSelected(false);
        }
    }//GEN-LAST:event_SignUpMouseClicked

    private void tf_NombreArtisticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_NombreArtisticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_NombreArtisticoActionPerformed

    private void LogInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogInMouseClicked
        boolean existe = false;
        for (int i = 0; i < AllUsers.size(); i++) {
            if (tf_Username.getText().equals(AllUsers.get(i).getUsername())) {
                existe = true;
                Current = AllUsers.get(i);
            }
        }
        if (existe) {
            if (Current.getTipo().equals("Artista")) {
                ArtistWindow.setModal(true);
                ArtistWindow.pack();
                ArtistWindow.setLocationRelativeTo(this);
                ArtistWindow.setVisible(true);
            }
            if (Current.getTipo().equals("Cliente")) {
                UserWindow.setModal(true);
                UserWindow.pack();
                UserWindow.setLocationRelativeTo(this);
                UserWindow.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El Usuario No Existe, Haga Sign Up.");
        }
    }//GEN-LAST:event_LogInMouseClicked

    private void UploadAlbumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadAlbumButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UploadAlbumButtonActionPerformed

    private void UploadSingleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UploadSingleButtonMouseClicked
        UploadSingleFrame.setModal(true);
        UploadSingleFrame.pack();
        UploadSingleFrame.setLocationRelativeTo(this);
        UploadSingleFrame.setVisible(true);
    }//GEN-LAST:event_UploadSingleButtonMouseClicked

    private void UploadSingleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadSingleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UploadSingleButtonActionPerformed

    private void CrearSingleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CrearSingleButtonMouseClicked

        CreateSongFrame.setModal(true);
        CreateSongFrame.pack();
        CreateSongFrame.setLocationRelativeTo(this);
        CreateSongFrame.setVisible(true);
    }//GEN-LAST:event_CrearSingleButtonMouseClicked

    private void tf_SongTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_SongTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_SongTituloActionPerformed

    private void CrearSongButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CrearSongButtonMouseClicked
        Cancion Song = new Cancion(tf_SongTitulo.getText(), Double.parseDouble(tf_SongDuracion.getText()), null);
        Single NewLan = new Single(Song, tf_SingleTitulo.getText(), SingleFechaChooser.getDate(), 0);
        NewLan.getInSingle().setReferencia(NewLan);

        JOptionPane.showMessageDialog(this, "Single & Cancion Creados");

        CreateSongFrame.setModal(false);
        CreateSongFrame.setVisible(false);
        UploadSingleFrame.setModal(false);
        UploadSingleFrame.setVisible(false);

        DefaultTreeModel m = (DefaultTreeModel) LanzamientosTree.getModel();
        DefaultMutableTreeNode Lanzamientos
                = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode nodo_single;
        nodo_single
                = new DefaultMutableTreeNode(
                        NewLan.getTitulo()
                );
        DefaultMutableTreeNode nodo_cancion;
        nodo_cancion
                = new DefaultMutableTreeNode(
                        Song.getTituloCancion()
                );
        Lanzamientos.add(nodo_single);
        nodo_single.add(nodo_cancion);
        m.reload();
        DefaultTreeModel t = (DefaultTreeModel) BrowseTree.getModel();
        DefaultMutableTreeNode Lanzamientos1
                = (DefaultMutableTreeNode) t.getRoot();
        DefaultMutableTreeNode nodo_single1;
        nodo_single1
                = new DefaultMutableTreeNode(
                        NewLan.getTitulo()
                );
        DefaultMutableTreeNode nodo_cancion1;
        nodo_cancion1
                = new DefaultMutableTreeNode(
                        Song.getTituloCancion()
                );
        Lanzamientos1.add(nodo_single1);
        nodo_single1.add(nodo_cancion1);
        t.reload();
        ((Artista) Current).Releases.add(NewLan);
        ((Artista) Current).Uploads.add(Song);

        tf_SongTitulo.setText("");
        tf_SongDuracion.setText("");
        tf_SingleTitulo.setText("");
        SingleFechaChooser.setDate(null);
    }//GEN-LAST:event_CrearSongButtonMouseClicked

    private void CrearSingleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearSingleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrearSingleButtonActionPerformed

    private void CrearAlbumButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CrearAlbumButtonMouseClicked
        Album NewAlbum = new Album(Integer.parseInt(tf_CuentaCanciones.getText()), tf_AlbumTitulo.getText(), AlbumFechaChooser.getDate(), 0);
        CurrentAlbum = NewAlbum;
        JOptionPane.showMessageDialog(this, "Album Creado");
        CreateSongFrame1.setModal(true);
        CreateSongFrame1.pack();
        CreateSongFrame1.setLocationRelativeTo(this);
        CreateSongFrame1.setVisible(true);
        
        m = (DefaultTreeModel) LanzamientosTree.getModel();
        Lanzamientos = (DefaultMutableTreeNode) m.getRoot();
        nodo_album= new DefaultMutableTreeNode(CurrentAlbum.getTitulo());
        
        cont = 1;
    }//GEN-LAST:event_CrearAlbumButtonMouseClicked

    private void CrearAlbumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearAlbumButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrearAlbumButtonActionPerformed

    private void UploadAlbumButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UploadAlbumButtonMouseClicked
        UploadAlbumFrame.setModal(true);
        UploadAlbumFrame.pack();
        UploadAlbumFrame.setLocationRelativeTo(this);
        UploadAlbumFrame.setVisible(true);
    }//GEN-LAST:event_UploadAlbumButtonMouseClicked

    private void tf_SongTitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_SongTitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_SongTitulo1ActionPerformed

    private void CrearSongButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CrearSongButton1MouseClicked

        System.out.println(Integer.parseInt(tf_CuentaCanciones.getText()));

        while (cont <= CurrentAlbum.getCuentaCanciones()) {
            System.out.println(cont);
            Cancion Song = new Cancion(tf_SongTitulo1.getText(), Double.parseDouble(tf_SongDuracion1.getText()), CurrentAlbum);
            JOptionPane.showMessageDialog(this, "Cancion Creada");

            DefaultMutableTreeNode nodo_cancion;
            nodo_cancion
                    = new DefaultMutableTreeNode(
                            Song.getTituloCancion()
                    );
            nodo_album.add(nodo_cancion);

            tf_SongTitulo1.setText("");
            tf_SongDuracion1.setText("");
            tf_SingleTitulo.setText("");
            SingleFechaChooser.setDate(null);
            cont++;
        }
        Lanzamientos.add(nodo_album);
        m.reload();
        
        tf_SongTitulo1.setText("");
        tf_SongDuracion1.setText("");
        tf_SingleTitulo.setText("");
        SingleFechaChooser.setDate(null);

        CreateSongFrame1.setModal(false);
        CreateSongFrame1.setVisible(false);
        UploadSingleFrame.setModal(false);
        UploadSingleFrame.setVisible(false);

        ((Artista) Current).Releases.add(CurrentAlbum);
        JOptionPane.showMessageDialog(rootPane, "Added Album");

    }//GEN-LAST:event_CrearSongButton1MouseClicked

    private void CrearSongButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearSongButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CrearSongButton1ActionPerformed

    private void LanzamientosTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LanzamientosTreeMouseClicked
        // TODO add your handling code here:
        //        System.out.println(evt.getButton());
        //        if (evt.getButton() == 3) {
        //            //seleccionar un nodo con click derecho
        //            int row = jt_personas.getClosestRowForLocation(
        //                    evt.getX(), evt.getY());
        //            jt_personas.setSelectionRow(row);
        //            Object v1
        //                    = jt_personas.getSelectionPath().
        //                    getLastPathComponent();
        //            nodo_seleccionado = (DefaultMutableTreeNode) v1;
        //            if (nodo_seleccionado.getUserObject() instanceof Persona) {
        //                persona_seleccionada
        //                        = (Persona) nodo_seleccionado.
        //                        getUserObject();
        //                menu_popup.show(evt.getComponent(),
        //                        evt.getX(), evt.getY());
        //            }
        //
        //        }
    }//GEN-LAST:event_LanzamientosTreeMouseClicked

    private void ListarTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListarTreeMouseClicked
        
    }//GEN-LAST:event_ListarTreeMouseClicked

    private void NuevaPlaylistButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NuevaPlaylistButtonMouseClicked
        //PLAYLIST
        String nombrepl = JOptionPane.showInputDialog(this, "Ingrese el Nombre de la Playlist");
        Playlist pl = new Playlist(nombrepl, 0);
        ((Cliente)Current).Created.add(pl);
        
        DefaultTreeModel m = (DefaultTreeModel) PlayListTree.getModel();
        DefaultMutableTreeNode MisPlaylists
                = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode nodo_play;
        nodo_play
                = new DefaultMutableTreeNode(
                        pl.getNombrePlaylist()
                );
        MisPlaylists.add(nodo_play);
        m.reload();
        
    }//GEN-LAST:event_NuevaPlaylistButtonMouseClicked

    private void MeGustaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MeGustaButtonMouseClicked
        
    }//GEN-LAST:event_MeGustaButtonMouseClicked

    private void AddToPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToPlaylistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddToPlaylistActionPerformed

    private void LikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LikeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LikeActionPerformed

    private void CRUDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CRUDButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CRUDButtonActionPerformed

    private void CRUDButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CRUDButtonMouseClicked
        CRUD.setModal(true);
        CRUD.setVisible(true);
        CRUD.setModal(true);
        CRUD.setVisible(true);
        
        DefaultListModel modelo
                = (DefaultListModel) CRUDList.getModel();
        for (int i = 0; i < AllUsers.size(); i++) {
            modelo.addElement(AllUsers.get(i).getUsername());
            CRUDList.setModel(modelo);
        }
        
        
    }//GEN-LAST:event_CRUDButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddToPlaylist;
    private javax.swing.JLabel AlbumFecha;
    private com.toedter.calendar.JDateChooser AlbumFechaChooser;
    private javax.swing.JLabel AlbumTitle;
    private javax.swing.JDialog ArtistWindow;
    private javax.swing.JPopupMenu BrowsePopUp;
    private javax.swing.JTree BrowseTree;
    private javax.swing.JDialog CRUD;
    private javax.swing.JButton CRUDButton;
    private javax.swing.JList<String> CRUDList;
    private javax.swing.JButton CrearAlbumButton;
    private javax.swing.JButton CrearSingleButton;
    private javax.swing.JButton CrearSongButton;
    private javax.swing.JButton CrearSongButton1;
    private javax.swing.JLabel CreateSong;
    private javax.swing.JLabel CreateSong1;
    private javax.swing.JDialog CreateSongFrame;
    private javax.swing.JDialog CreateSongFrame1;
    private javax.swing.JLabel CuentaCanciones;
    private javax.swing.JLabel Edad;
    private javax.swing.JScrollPane LanzamientosScroll;
    private javax.swing.JTree LanzamientosTree;
    private javax.swing.JMenuItem Like;
    private javax.swing.JList<String> LikesList;
    private javax.swing.JButton ListarTree;
    private javax.swing.JButton LogIn;
    private javax.swing.JButton MeGustaButton;
    private javax.swing.JLabel NombreArtistico;
    private javax.swing.JButton NuevaPlaylistButton;
    private javax.swing.JLabel Password;
    private javax.swing.JTree PlayListTree;
    private javax.swing.JButton SignUp;
    private javax.swing.JLabel SignUpTitle;
    private javax.swing.JLabel SingleFecha;
    private com.toedter.calendar.JDateChooser SingleFechaChooser;
    private javax.swing.JLabel SingleTitle;
    private javax.swing.JLabel SongDuracion;
    private javax.swing.JLabel SongDuracion1;
    private javax.swing.JLabel SongTitulo;
    private javax.swing.JLabel SongTitulo1;
    private javax.swing.JRadioButton Spotify;
    private javax.swing.JRadioButton SpotifyArtists;
    private javax.swing.JLabel SpotifyForArtists;
    private javax.swing.JLabel SpotifyForClients;
    private javax.swing.ButtonGroup SpotifyType;
    private javax.swing.JLabel UploadAlbum;
    private javax.swing.JButton UploadAlbumButton;
    private javax.swing.JDialog UploadAlbumFrame;
    private javax.swing.JLabel UploadSingle;
    private javax.swing.JButton UploadSingleButton;
    private javax.swing.JDialog UploadSingleFrame;
    private javax.swing.JDialog UserWindow;
    private javax.swing.JLabel Username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField tf_AlbumTitulo;
    private javax.swing.JTextField tf_CuentaCanciones;
    private javax.swing.JTextField tf_Edad;
    private javax.swing.JTextField tf_NombreArtistico;
    private javax.swing.JTextField tf_Password;
    private javax.swing.JTextField tf_SingleTitulo;
    private javax.swing.JTextField tf_SongDuracion;
    private javax.swing.JTextField tf_SongDuracion1;
    private javax.swing.JTextField tf_SongTitulo;
    private javax.swing.JTextField tf_SongTitulo1;
    private javax.swing.JTextField tf_Username;
    // End of variables declaration//GEN-END:variables
    public ArrayList<Usuario> AllUsers = new ArrayList();

}
